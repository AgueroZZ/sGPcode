dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_part1_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period1)), col = "green", lty = "dashed")
dev.off()
### seasonal part 2:
samps_season<- samps_g3
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<-  pred_g3
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal_part2.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period3)), col = "green", lty = "dashed")
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_part2_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period3)), col = "green", lty = "dashed")
dev.off()
### seasonal part 3:
samps_season<- samps_g4
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<- pred_g4
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal_part3.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-5,5))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_part3_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
### seasonal part 4:
samps_season<- samps_g5
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<- pred_g5
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal_part4.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-5,5))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_part4_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
### seasonal parts lunar_solar together:
samps_season<- samps_g4 + samps_g5
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<- pred_g4 + pred_g5
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal_lunar_solar.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-5,5))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_lunar_solar_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
dev.off()
### Post Summary of Hyper:
d_step <- 10
scale1 <- compute_d_step_sGPsd(d = d_step,a = a1)
c1 <- 1/scale1
scale2 <- compute_d_step_sGPsd(d = d_step,a = a2)
c2 <- 1/scale2
scale3 <- compute_d_step_sGPsd(d = d_step,a = a3)
c3 <- 1/scale3
scale4 <- compute_d_step_sGPsd(d = d_step,a = a4)
c4 <- 1/scale4
scale5 <- compute_d_step_sGPsd(d = d_step,a = a5)
c5 <- 1/scale5
prior_set_IWP_used <- prior_conversion(d = d_step, prior = prior_set_IWP, p = 3)
c6 <- prior_set_IWP$u/prior_set_IWP_used$u
load(file = paste0(result_path, "samps/", "1", "_hyper_sample.rda"))
sampsHyper1 <- simulate_hyper(hyper_result = hyper_result, nsamps = 3000, which_index = 1)
sampsHyper1 <- c1 * sampsHyper1
summary(sampsHyper1)
sampsHyper2 <- simulate_hyper(hyper_result = hyper_result, nsamps = 3000, which_index = 2)
sampsHyper2 <- c2 * sampsHyper2
summary(sampsHyper2)
sampsHyper3 <- simulate_hyper(hyper_result = hyper_result, nsamps = 3000, which_index = 3)
sampsHyper3 <- c3 * sampsHyper3
summary(sampsHyper3)
sampsHyper4 <- simulate_hyper(hyper_result = hyper_result, nsamps = 3000, which_index = 4)
sampsHyper4 <- c4 * sampsHyper4
summary(sampsHyper4)
sampsHyper5 <- simulate_hyper(hyper_result = hyper_result, nsamps = 3000, which_index = 5)
sampsHyper5 <- c5 * sampsHyper5
summary(sampsHyper5)
sampsHyper6 <- simulate_hyper(hyper_result = hyper_result, nsamps = 3000, which_index = 6)
sampsHyper6 <- c6 * sampsHyper6
summary(sampsHyper6)
sampsHyper7 <- simulate_hyper(hyper_result = hyper_result, nsamps = 3000, which_index = 7)
summary(sampsHyper7)
### Plotting:
### Overall:
samps_overall<- samps_g1 + samps_g2 + samps_g3 + samps_g4 + samps_g5 + samps_g6
samps_overall$x <- refined_x
upper_int <- samps_overall[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_overall[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_overall[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_overall<- pred_g1 + pred_g2 + pred_g3 + pred_g4 + pred_g5 + pred_g6
pred_overall$x <- pred_x
pred_upper_int <- pred_overall[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_overall[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_overall[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_overall.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(310,450), xlim = c(1960,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
dev.off()
pdf(file = paste0(figure_path, "sGP_overall_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(380,450), xlim = c(2010,2030))
points(observed_dataset$co2 ~ I(observed_dataset$timeYears + 1960), lwd = 1, cex = 0.1)
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
dev.off()
### Trend
samps_trend<- samps_g6
samps_trend$x <- refined_x
upper_int <- samps_trend[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_trend[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_trend[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_trend<- pred_g6
pred_trend$x <- pred_x
pred_upper_int <- pred_trend[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_trend[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_trend[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_trend.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(310,450), xlim = c(1960,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
dev.off()
### Trend Derivative
samps_1st<- samps_IWP_1st
samps_1st$x <- refined_x
upper_int <- samps_1st[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_1st[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_1st[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_1st<- pred_IWP_1st
pred_1st$x <- pred_x
pred_upper_int <- pred_1st[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_1st[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_1st[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_trend_1st.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-2,5), xlim = c(1960,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
dev.off()
### seasonal
samps_season<- samps_g1 + samps_g2 + samps_g3 + samps_g4 + samps_g5
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<- pred_g1 + pred_g2 + pred_g3 + pred_g4 + pred_g5
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(1960,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
dev.off()
### seasonal part 1:
samps_season<- samps_g1 + samps_g2
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<- pred_g1 + pred_g2
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal_annual.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period1)), col = "green", lty = "dashed")
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_annual_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period1)), col = "green", lty = "dashed")
dev.off()
### seasonal part 2:
samps_season<- samps_g3
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<-  pred_g3
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal_ENSO.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period3)), col = "green", lty = "dashed")
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_ENSO_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period3)), col = "green", lty = "dashed")
dev.off()
### seasonal part 3:
samps_season<- samps_g4
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<- pred_g4
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal_lunar.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-5,5))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_lunar_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
### seasonal part 4:
samps_season<- samps_g5
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<- pred_g5
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal_solar.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-5,5))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_solar_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
### seasonal parts lunar_solar together:
samps_season<- samps_g4 + samps_g5
samps_season$x <- refined_x
upper_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
lower_int <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
mean <- samps_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pred_season<- pred_g4 + pred_g5
pred_season$x <- pred_x
pred_upper_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.975)
pred_lower_int <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = quantile, p = 0.025)
pred_mean <- pred_season[,-1] %>% apply(MARGIN = 1, FUN = mean)
pdf(file = paste0(figure_path, "sGP_seasonal_lunar_solar.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-5,5))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
abline(v = seq(min(refined_years),max(pred_years), by = (1/period4)), col = "green", lty = "dashed")
dev.off()
pdf(file = paste0(figure_path, "sGP_seasonal_lunar_solar_pred.pdf"), height = 5, width = 5)
plot(mean~refined_years, type = 'l', col = 'blue', ylab = 'CO2', xlab = 'years', ylim = c(-10,10), xlim = c(2010,2030))
lines(upper_int~refined_years, lty = 'dashed', col = 'red')
lines(lower_int~refined_years, lty = 'dashed', col = 'red')
lines(pred_mean~pred_years, lty = 'solid', col = "blue")
lines(pred_upper_int~pred_years, lty = 'dashed', col = 'red')
lines(pred_lower_int~pred_years, lty = 'dashed', col = 'red')
dev.off()
library(aghq)
library(TMB)
library(Matrix)
library(xml2)
library(tidyverse)
library(mvQuad)
library(fda)
library(LaplacesDemon)
library(mvtnorm)
library(OSplines)
library(sGPfit)
source(paste0(source_path, "06_functions_seasonal.R"))
.libPaths( c( .libPaths(), "~/./lib") )
#### PATH:
working_path <- getwd()
source_path <- paste0(working_path,"/source/")
figure_path <- paste0(working_path,"/figures/")
result_path <- paste0(working_path,"/results/")
library(aghq)
library(TMB)
library(Matrix)
library(xml2)
library(tidyverse)
library(mvQuad)
library(fda)
library(LaplacesDemon)
library(mvtnorm)
library(OSplines)
library(parallel)
library(foreach)
library(doMC)
library(sGPfit)
source(paste0(source_path, "06_functions_seasonal.R"))
library(aghq)
library(TMB)
library(Matrix)
library(xml2)
library(tidyverse)
library(mvQuad)
library(fda)
library(LaplacesDemon)
library(mvtnorm)
library(OSplines)
library(sGPfit)
source(paste0(source_path, "06_functions_seasonal.R"))
source(paste0(source_path, "00_functions_predictGP.R"))
source(paste0(source_path, "00_functions_simHyper.R"))
refined_x <- seq(min(x), max(x), by = 0.01)
### Read in the full data:
cUrl = paste0("http://scrippsco2.ucsd.edu/assets/data/atmospheric/",
"stations/flask_co2/daily/daily_flask_co2_mlo.csv")
cFile = basename(cUrl)
if (!file.exists(cFile)) download.file(cUrl, cFile)
co2s = read.table(cFile, header = FALSE, sep = ",",
skip = 69, stringsAsFactors = FALSE, col.names = c("day",
"time", "junk1", "junk2", "Nflasks", "quality",
"co2"))
co2s$date = strptime(paste(co2s$day, co2s$time), format = "%Y-%m-%d %H:%M",
tz = "UTC")
co2s$day = as.Date(co2s$date)
timeOrigin = as.Date("1960/03/30")
co2s$timeYears = round(as.numeric(co2s$day - timeOrigin)/365.25,
3)
co2s$dayInt = as.integer(co2s$day)
allDays = seq(from = min(co2s$day), to = max(co2s$day),
by = "7 day")
observed_dataset <- co2s %>% filter(!is.na(co2s$co2)) %>% dplyr::select(c("co2", "timeYears"))
observed_dataset$quality <- ifelse(co2s$quality > 0, 1, 0)
# remove low-quality measurements
observed_dataset <- observed_dataset %>% filter(quality == 0)
# # ### subset for faster experiment
# set.seed(123)
# observed_dataset <- sample_n(observed_dataset, 100)
x_grid <- observed_dataset$co2
n <- length(x_grid)
years_cyl1 <- 1
years_cyl2 <- 0.5
years_cyl3 <- 44/12
years_cyl4 <- 9.1
years_cyl5 <- 10.4
period1 <- 1/years_cyl1
period2 <- 1/years_cyl2
period3 <- 1/years_cyl3
period4 <- 1/years_cyl4
period5 <- 1/years_cyl5
a1 = 2*period1*pi
a2 = 2*period2*pi
a3 = 2*period3*pi
a4 = 2*period4*pi
a5 = 2*period5*pi
d_step <- 10
prior_set_IWP <- list(a = 0.5, u = 30)
prior_set_IWP_used <- prior_conversion(d = d_step, prior = prior_set_IWP, p = 3)
x <- observed_dataset$timeYears
region <- c(0,max(x))
k <- 102
X1 <- as(cbind(cos(a1*x), sin(a1*x)), "dgTMatrix")
X2 <- as(cbind(cos(a2*x), sin(a2*x)), "dgTMatrix")
X3 <- as(cbind(cos(a3*x), sin(a3*x)), "dgTMatrix")
X4 <- as(cbind(cos(a4*x), sin(a4*x)), "dgTMatrix")
X5 <- as(cbind(cos(a5*x), sin(a5*x)), "dgTMatrix")
Q6 <- as(compute_weights_precision(x = seq(0, max(x), length.out = k)), "dgTMatrix")
B6 <- as(local_poly(knots = seq(0, max(x), length.out = k), refined_x = x, p = 3), "dgTMatrix")
prior_set_IWP
### Post Summary of Hyper:
d_step <- 10
prior_set_IWP_used <- prior_conversion(d = d_step, prior = prior_set_IWP, p = 3)
c <- prior_set_IWP$u/prior_set_IWP_used$u
load(file = paste0(result_path, "fixed_samps/", "1", "_hyper_sample.rda"))
sampsHyperIWP <- simulate_hyper(hyper_result = hyper_result, nsamps = 3000, which_index = 1)
sampsHyperIWP <- c * sampsHyperIWP
summary(sampsHyperIWP)
sampsHyperResidual <- simulate_hyper(hyper_result = hyper_result, nsamps = 3000, which_index = 2)
summary(sampsHyperResidual)
